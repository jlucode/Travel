[{"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/AddisAbaba.js":"1","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Algiers.js":"2","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Cairo.js":"3","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/CapeTown.js":"4","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Casablanca.js":"5","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Johannesburg.js":"6","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Lagos.js":"7","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Marrakech.js":"8","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Nairobi.js":"9","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Tunis.js":"10","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/App.js":"11","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Bali.js":"12","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Bangkok.js":"13","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Dubai.js":"14","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/HongKong.js":"15","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/KualaLumpur.js":"16","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Manila.js":"17","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/NewDelhi.js":"18","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Seoul.js":"19","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Singapore.js":"20","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Tokyo.js":"21","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Adelaide.js":"22","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Auckland.js":"23","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Brisbane.js":"24","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Canberra.js":"25","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Christchurch.js":"26","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/GoldCoast.js":"27","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/LoganCity.js":"28","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Melbourne.js":"29","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Perth.js":"30","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Sydney.js":"31","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Amsterdam.js":"32","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Budapest.js":"33","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Dublin.js":"34","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Florence.js":"35","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Lisbon.js":"36","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/London.js":"37","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Madrid.js":"38","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Milan.js":"39","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Paris.js":"40","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Vienna.js":"41","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/MapChart.js":"42","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Navbar.js":"43","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Cancun.js":"44","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/LasVegas.js":"45","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/LosAngeles.js":"46","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/MexicoCity.js":"47","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/NewYork.js":"48","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Orlando.js":"49","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/SanDiego.js":"50","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/SanFrancisco.js":"51","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Seattle.js":"52","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Toronto.js":"53","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Bogota.js":"54","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/BuenosAires.js":"55","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cali.js":"56","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cartagena.js":"57","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cusco.js":"58","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Lima.js":"59","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Medellin.js":"60","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/RioDeJaneiro.js":"61","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Santiago.js":"62","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/SaoPaulo.js":"63","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Africa.js":"64","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Asia.js":"65","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Australia.js":"66","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Europe.js":"67","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/NorthAmerica.js":"68","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/SouthAmerica.js":"69","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/index.js":"70"},{"size":27650,"mtime":1669932865000,"results":"71","hashOfConfig":"72"},{"size":27600,"mtime":1669932865000,"results":"73","hashOfConfig":"72"},{"size":27567,"mtime":1669932865000,"results":"74","hashOfConfig":"72"},{"size":27484,"mtime":1669932865000,"results":"75","hashOfConfig":"72"},{"size":27621,"mtime":1669932865000,"results":"76","hashOfConfig":"72"},{"size":27483,"mtime":1669932865000,"results":"77","hashOfConfig":"72"},{"size":27534,"mtime":1669932865000,"results":"78","hashOfConfig":"72"},{"size":27391,"mtime":1669932865000,"results":"79","hashOfConfig":"72"},{"size":27474,"mtime":1669932865000,"results":"80","hashOfConfig":"72"},{"size":27555,"mtime":1669932865000,"results":"81","hashOfConfig":"72"},{"size":63,"mtime":1669932865000,"results":"82","hashOfConfig":"72"},{"size":27463,"mtime":1669932865000,"results":"83","hashOfConfig":"72"},{"size":27422,"mtime":1669932865000,"results":"84","hashOfConfig":"72"},{"size":27384,"mtime":1669932865000,"results":"85","hashOfConfig":"72"},{"size":27381,"mtime":1669932865000,"results":"86","hashOfConfig":"72"},{"size":27453,"mtime":1669932865000,"results":"87","hashOfConfig":"72"},{"size":27423,"mtime":1669932865000,"results":"88","hashOfConfig":"72"},{"size":27367,"mtime":1669932865000,"results":"89","hashOfConfig":"72"},{"size":27486,"mtime":1669932865000,"results":"90","hashOfConfig":"72"},{"size":27446,"mtime":1669932865000,"results":"91","hashOfConfig":"72"},{"size":27395,"mtime":1669932865000,"results":"92","hashOfConfig":"72"},{"size":27401,"mtime":1669932865000,"results":"93","hashOfConfig":"72"},{"size":27366,"mtime":1669932865000,"results":"94","hashOfConfig":"72"},{"size":27477,"mtime":1669932865000,"results":"95","hashOfConfig":"72"},{"size":27435,"mtime":1669932865000,"results":"96","hashOfConfig":"72"},{"size":27487,"mtime":1669932865000,"results":"97","hashOfConfig":"72"},{"size":27463,"mtime":1669932865000,"results":"98","hashOfConfig":"72"},{"size":27420,"mtime":1669932865000,"results":"99","hashOfConfig":"72"},{"size":27402,"mtime":1669932865000,"results":"100","hashOfConfig":"72"},{"size":27398,"mtime":1669932865000,"results":"101","hashOfConfig":"72"},{"size":27382,"mtime":1669932865000,"results":"102","hashOfConfig":"72"},{"size":27461,"mtime":1669932865000,"results":"103","hashOfConfig":"72"},{"size":27419,"mtime":1669932865000,"results":"104","hashOfConfig":"72"},{"size":27473,"mtime":1669932865000,"results":"105","hashOfConfig":"72"},{"size":27420,"mtime":1669932865000,"results":"106","hashOfConfig":"72"},{"size":27439,"mtime":1669932865000,"results":"107","hashOfConfig":"72"},{"size":27387,"mtime":1669932865000,"results":"108","hashOfConfig":"72"},{"size":27433,"mtime":1669932865000,"results":"109","hashOfConfig":"72"},{"size":27429,"mtime":1669932865000,"results":"110","hashOfConfig":"72"},{"size":27364,"mtime":1669932865000,"results":"111","hashOfConfig":"72"},{"size":27385,"mtime":1669932865000,"results":"112","hashOfConfig":"72"},{"size":2922,"mtime":1669932865000,"results":"113","hashOfConfig":"72"},{"size":109,"mtime":1669932865000,"results":"114","hashOfConfig":"72"},{"size":27491,"mtime":1669932865000,"results":"115","hashOfConfig":"72"},{"size":27412,"mtime":1669932865000,"results":"116","hashOfConfig":"72"},{"size":27392,"mtime":1669932865000,"results":"117","hashOfConfig":"72"},{"size":27446,"mtime":1669932865000,"results":"118","hashOfConfig":"72"},{"size":27644,"mtime":1669932865000,"results":"119","hashOfConfig":"72"},{"size":27723,"mtime":1669932865000,"results":"120","hashOfConfig":"72"},{"size":27642,"mtime":1669932865000,"results":"121","hashOfConfig":"72"},{"size":27675,"mtime":1669932865000,"results":"122","hashOfConfig":"72"},{"size":27653,"mtime":1669932865000,"results":"123","hashOfConfig":"72"},{"size":27686,"mtime":1669932865000,"results":"124","hashOfConfig":"72"},{"size":27431,"mtime":1669932865000,"results":"125","hashOfConfig":"72"},{"size":27558,"mtime":1669932865000,"results":"126","hashOfConfig":"72"},{"size":27622,"mtime":1669932865000,"results":"127","hashOfConfig":"72"},{"size":27733,"mtime":1669932865000,"results":"128","hashOfConfig":"72"},{"size":27518,"mtime":1669932865000,"results":"129","hashOfConfig":"72"},{"size":27429,"mtime":1669932865000,"results":"130","hashOfConfig":"72"},{"size":27513,"mtime":1669932865000,"results":"131","hashOfConfig":"72"},{"size":27552,"mtime":1669932865000,"results":"132","hashOfConfig":"72"},{"size":27654,"mtime":1669932865000,"results":"133","hashOfConfig":"72"},{"size":27657,"mtime":1669932865000,"results":"134","hashOfConfig":"72"},{"size":4064,"mtime":1669932865000,"results":"135","hashOfConfig":"72"},{"size":4013,"mtime":1669932865000,"results":"136","hashOfConfig":"72"},{"size":3930,"mtime":1669932865000,"results":"137","hashOfConfig":"72"},{"size":4029,"mtime":1669932865000,"results":"138","hashOfConfig":"72"},{"size":4403,"mtime":1669932865000,"results":"139","hashOfConfig":"72"},{"size":4132,"mtime":1669932865000,"results":"140","hashOfConfig":"72"},{"size":771,"mtime":1669932865000,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"145"},"1e1t9v6",{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"165"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"169"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"173"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"177"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"241"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"249"},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"253"},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"257"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"265"},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"269"},{"filePath":"270","messages":"271","suppressedMessages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"273"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"277"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"281"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"285"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"293"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"297"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"301"},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"305"},{"filePath":"306","messages":"307","suppressedMessages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"316"},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"320"},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"324"},{"filePath":"325","messages":"326","suppressedMessages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"328"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"332"},{"filePath":"333","messages":"334","suppressedMessages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"336"},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"340"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"344"},{"filePath":"345","messages":"346","suppressedMessages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"348"},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"352"},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"356"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"360"},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"364"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"368"},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"372"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"376"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"380"},{"filePath":"381","messages":"382","suppressedMessages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"384"},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"388"},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":"392"},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","suppressedMessages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"399","messages":"400","suppressedMessages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","suppressedMessages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","suppressedMessages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"408","messages":"409","suppressedMessages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","suppressedMessages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/AddisAbaba.js",["414","415","416","417","418","419","420","421","422","423","424","425","426"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function AddisAbaba() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"ADD\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Addis Ababa&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Addis Ababa\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=addis ababa&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Addis Ababa!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g293791-d2425949-Reviews-Mount_Entoto-Addis_Ababa.html\">Mount Entoto</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://joyofmuseums.com/museums/africa-museums/ethiopia-museums/addis-ababa-museums/national-museum-ethiopia/\">National Museum of Ethiopia</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.cipdh.gob.ar/memorias-situadas/en/lugar-de-memoria/museo-memorial-de-los-martires-del-terror-rojo/\">Red Terror Martyrs Memorial Museum</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=addis ababa&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_AddisAbaba.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Algiers.js",["427","428","429","430","431","432","433","434","435","436","437","438","439"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Algiers() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"ALG\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Algiers&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Algiers, Algeria\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Algiers&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Algiers!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g293718-d2512728-Reviews-Le_Jardin_d_Essai_du_Hamma-Algiers_Algiers_Province.html\">Le Jardin d'Essai du Hamma</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.viator.com/tours/Algiers/Guided-tour-of-the-Kasbah-of-Algiers-with-qualified-and-young-guides/d25745-135689P1\">Kasbah of Algiers</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://notre-dame-afrique.org/\">Basilique Notre Dame d'Afrique</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=algiers,algeria&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Algiers.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Cairo.js",["440","441","442","443","444","445","446","447","448","449","450","451","452"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Cairo() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CAI\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Cairo&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cairo\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=cairo&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cairo!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://egymonuments.gov.eg/en/museums/egyptian-museum\">The Museum of Egyptian Antiquities</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/AttractionToursAndTickets-g294201-d472084-Nile_River-Cairo_Cairo_Governorate.html\">Nile River</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/AttractionToursAndTickets-g294201-d553171-Mosque_of_Muhammad_Ali-Cairo_Cairo_Governorate.html\">Mosque of Muhammad Ali</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cairo&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Cairo.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/CapeTown.js",["453","454","455","456","457","458","459","460","461","462","463","464","465"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function CapeTown() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CPT\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=cape town&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cape Town\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=cape town&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cape Town!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://tablemountain.net/\">Table Mountain Aerial Cableway</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.waterfront.co.za/\">Victoria & Alfred Waterfront</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g312659-d481585-Reviews-Lion_s_Head-Cape_Town_Central_Western_Cape.html\">Lion's Head</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cape town&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_CapeTown.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Casablanca.js",["466","467","468","469","470","471","472","473","474","475","476","477","478"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Casablanca() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CMN\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Casablanca&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Casablanca, Morocco\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Casablanca&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Casablanca!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g293718-d2512728-Reviews-Le_Jardin_d_Essai_du_Hamma-Algiers_Algiers_Province.html\">Le Jardin d'Essai du Hamma</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.viator.com/tours/Algiers/Guided-tour-of-the-Kasbah-of-Algiers-with-qualified-and-young-guides/d25745-135689P1\">Kasbah of Algiers</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://notre-dame-afrique.org/\">Basilique Notre Dame d'Afrique</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=casablanca,morocco&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Casablanca.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Johannesburg.js",["479","480","481","482","483","484","485","486","487","488","489","490","491"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Johannesburg() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"NBO\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Nairobi&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Nairobi\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=nairobi&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Johannesburg!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.sheldrickwildlifetrust.org/\">Sheldrick Wildlife Trust</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.kws.go.ke/parks/nairobi-national-park\">Nairobi National Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g294207-d2707373-Reviews-Karura_Forest-Nairobi.html\">Karura Forest</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=nairobi&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Nairobi.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Lagos.js",["492","493","494","495","496","497","498","499","500","501","502","503","504"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Lagos() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"LOS\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Lagos&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Lagos\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=lagos,nigeria&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Lagos!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g304026-d2305113-Reviews-Lekki_Conservation_Centre-Lagos_Lagos_State.html\">Lekki Conservation Centre</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://freedomparklagos.com/\">Freedom Park Lagos</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g304026-d2441578-Reviews-Lekki_Market-Lagos_Lagos_State.html\">Lekki Market</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=lagos&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Lagos.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Marrakech.js",["505","506","507","508","509","510","511","512","513","514","515","516","517"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Marrakech() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"RAK\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=marrakech&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Marrakech\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=marrakech&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Marrakech!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.jardinmajorelle.com/en/\">Jardin Majorelle</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://bahia-palace.com/\">Palacio da Bahia</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://whc.unesco.org/en/list/331/\">Medina of Marrakesh</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=marrakech&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Marrakech.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Nairobi.js",["518","519","520","521","522","523","524","525","526","527","528","529","530"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Nairobi() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"NBO\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Nairobi&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Nairobi\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=nairobi&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Nairobi !</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.sheldrickwildlifetrust.org/\">Sheldrick Wildlife Trust</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.kws.go.ke/parks/nairobi-national-park\">Nairobi National Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g294207-d2707373-Reviews-Karura_Forest-Nairobi.html\">Karura Forest</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=nairobi&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Nairobi.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/African_Cities/Tunis.js",["531","532","533","534","535","536","537","538","539","540","541","542","543"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Tunis() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"TUN\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Tunis&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Tunis\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Tunis&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Tunis!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://whc.unesco.org/en/list/36/\">Medina of Tunis</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/AttractionToursAndTickets-g293758-d472658-Zitouna_Mosque-Tunis_Tunis_Governorate.html\">Zitouna Mosque</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g293758-d480909-Reviews-Cathedral_of_St_Vincent_de_Paul-Tunis_Tunis_Governorate.html\">Cathedral of St. Vincent de Paul</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=tunis&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Tunis.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/App.js",["544"],[],"import React from \"react\";\n\nexport default function MyApp() {\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Bali.js",["545","546","547","548","549","550","551","552","553","554","555","556","557"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Bali() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"DPS\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=bali&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Bali\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=bali&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Bali!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.viator.com/Bali-attractions/Mt-Agung-Gunung-Agung/d98-a12899\">Mount Agung</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.waterbom-bali.com/\">Waterbom Bali</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g2538506-d12396108-Reviews-Kelingking_Beach-Nusa_Penida_Bali.html\">Kelingking Beach</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=bali&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Bali.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Bangkok.js",["558","559","560","561","562","563","564","565","566","567","568","569","570"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Bangkok() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"BKK\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=bangkok&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Bangkok\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=bangkok&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Bangkok!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tourismthailand.org/Attraction/wat-pho\">Wat Phra Chetuphon</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tourismthailand.org/Attraction/wat-arun-temple-of-dawn\">Temple of Dawn</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.siamparagon.co.th/l\">Siam Paragon</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Bangkok&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Bangkok.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Dubai.js",["571","572","573","574","575","576","577","578","579","580","581","582","583"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Dubai() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"DXB\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=dubai&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Dubai\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=dubai&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Dubai!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.burjkhalifa.ae/en/\">Burj Khalifa</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.burjkhalifa.ae/en/downtown-dubai/the-dubai-fountain/\">The Dubai Fountain</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.globalvillage.ae/\">Global Village</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Dubai&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Dubai.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/HongKong.js",["584","585","586","587","588","589","590","591","592","593","594","595","596"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function HongKong() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"HKG\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=hongkong&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Hong Kong\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=hongkong&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Hong Kong!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.hk-victoria-peak.com/\">Victoria Peak</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.plm.org.hk/eng/buddha.php\">Tian Tan Buddha</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.lantau-island.com/\">Lantau Island</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=hongkong&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_HongKong.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/KualaLumpur.js",["597","598","599","600","601","602","603","604","605","606","607","608","609"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function KualaLumpur() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"KUL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=kuala lumpur&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Kuala Lumpur\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=kualalumpur&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Kuala Lumpur!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.petronastwintowers.com.my/\">Petronas Twin Towers</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.env.go.jp/garden/shinjukugyoen/english/\">KLCC Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.royalselangor.com/visitor-centre\">Royal Selangor Visitor Centre</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=kualalumpur&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_KualaLumpur.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Manila.js",["610","611","612","613","614","615","616","617","618","619","620","621","622"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Manila() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"MNL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=manila&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Manila\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=manila&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Manila!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://intramuros.gov.ph/\">Intramuros</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://visitfortsantiago.com/\">Fort Santiago</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.lonelyplanet.com/philippines/manila/attractions/san-agustin-church/a/poi-sig/391173/357305\">San Agustin Church</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=manila&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Manila.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/NewDelhi.js",["623","624","625","626","627","628","629","630","631","632","633","634","635"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function NewDelhi() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"DEL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=new delhi&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"New Delhi\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=newdelhi&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore New Delhi!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.qutubminar.org/\">Qutub Minar</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://akshardham.com/\">Swaminarayan Akshardham</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"http://www.humayunstomb.com/\">Humayun's Tomb</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=New Delhi&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_NewDelhi.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Seoul.js",["636","637","638","639","640","641","642","643","644","645","646","647","648"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Seoul() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"SEL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=seoul&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Seoul\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Seoul&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Seoul!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.royalpalace.go.kr:8080/html/eng_gbg/main/main.jsp\">Gyeongbokgung Palace</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://english.knps.or.kr/Knp/Bukhansan/Intro/Introduction.aspx?MenuNum=1&Submenu=Npp\">Bukhansan National Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.koreatodo.com/myeongdong-shopping-district\">Myeongdong Shopping Street</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Seoul&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Seoul.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Singapore.js",["649","650","651","652","653","654","655","656","657","658","659","660","661"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Singapore() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"SIN\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=singapore&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Singapore\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=singapore&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Singapore!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.gardensbythebay.com.sg/\">Gardens by the Bay</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.mandai.com/en/singapore-zoo.html\">Singapore Zoo</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.marinabaysands.com/attractions/sands-skypark.html\">Sands Skypark Observation Deck</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=singapore&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Singapore.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Asian_Cities/Tokyo.js",["662","663","664","665","666","667","668","669","670","671","672","673","674"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Tokyo() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"TYO\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=tokyo&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Tokyo\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=tokyo&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Tokyo!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.meijijingu.or.jp/en/\">Meiji Jingu Shrine</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.env.go.jp/garden/shinjukugyoen/english/\">Shinjuku Gyoen National Garden</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.japan-guide.com/e/e3004.html\">Asakusa</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=tokyo&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Tokyo.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Adelaide.js",["675","676","677","678","679","680","681","682","683","684","685","686","687"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Adelaide() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"ADL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=adelaide&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Adelaide\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=adelaide&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Adelaide!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.adelaideoval.com.au/\">Adelaide Oval</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.botanicgardens.sa.gov.au/\">Adelaide Botanic Garden</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.agsa.sa.gov.au/\">Art Gallery of South Australia</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Adelaide&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Adelaide.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Auckland.js",["688","689","690","691","692","693","694","695","696","697","698","699","700"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Auckland() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"AKL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=auckland&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Auckland\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=auckland&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Auckland!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://skycityauckland.co.nz/sky-tower/\">Sky Tower</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://edenpark.co.nz/\">Eden Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.aucklandmuseum.com/\">Auckland Museum</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Auckland&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Auckland.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Brisbane.js",["701","702","703","704","705","706","707","708","709","710","711","712","713"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Brisbane() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"BNE\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=brisbane&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Brisbane Queensland\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=brisbane&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Brisbane!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://lonepinekoalasanctuary.com/\">Lone Pine Koala Sanctuary</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.visitbrisbane.com.au/brisbane/things-to-do/shopping/south-bank-parklands?sc_lang=en-au\">South Bank Parklands</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.xxxx.com.au/agegate/\">XXXX Brewery Tour</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Brisbane&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Brisbane.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Canberra.js",["714","715","716","717","718","719","720","721","722","723","724","725","726"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Canberra() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CBR\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=canberra&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Canberra\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=canberra&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Canberra!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.awm.gov.au/\">Australian War Memorial</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.aph.gov.au/\">Australian Parliament House</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://visitcanberra.com.au/attractions/56b23b003ed14ca745317ace/mount-ainslie-lookout\">Mount Ainslie</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=canberra&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Canberra.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Christchurch.js",["727","728","729","730","731","732","733","734","735","736","737","738","739"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Christchurch() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CHC\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=christchurch&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"christchurch\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=christchurch&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Christchurch!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.canterburymuseum.com/\">Canterbury Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://ccc.govt.nz/parks-and-gardens/christchurch-botanic-gardens\">Christchurch Botanic Gardens</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.christchurchattractions.nz/christchurch-gondola/\">Christchurch Gondola</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=christchurch&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Christchurch.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\"justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\"justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\"justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\"justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/GoldCoast.js",["740","741","742","743","744","745","746","747","748","749","750","751","752"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function GoldCoast() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"OOL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=gold coast&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Gold Coast\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=gold coast&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Gold Coast!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.queensland.com/us/en/things-to-do/attractions/p-56b26568d5f1565045da88d9-surfers-paradise-beach\">Surfers Paradise Beach</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://seaworld.com.au/\">Sea World</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://movieworld.com.au/\">Warner Bros. Movie World</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Gold Coast&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_GoldCoast.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/LoganCity.js",["753","754","755","756","757","758","759","760","761","762","763","764","765"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function LoganCity() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"BNE\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=logan city&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Logan City Queensland\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=bne&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Logan City!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.beenleighrum.com.au/\">Beenleigh Artisan Distillery</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.chungtian.org.au/\">Chung Tian Temple</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://kingstonpark.com.au/\">Kingston Park Raceway</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Logan City Queensland&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_LoganCity.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Melbourne.js",["766","767","768","769","770","771","772","773","774","775","776","777","778"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Melbourne() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"MEL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=melbourne, au&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Melbourne\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=melbourne&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Melbourne!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.melbourneskydeck.com.au/\">Eureka Skydeck</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.ngv.vic.gov.au/\">National Gallery of Victoria</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.mcg.org.au/\">Melbourne Cricket Ground</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Melbourne&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Melbourne.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Perth.js",["779","780","781","782","783","784","785","786","787","788","789","790","791"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Perth() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"PER\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=perth&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Perth WA\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=perth&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Perth!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.bgpa.wa.gov.au/kings-park\">Kings Park and Botanic Garden</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.destinationperth.com.au/destination/swan-river\">Swan River</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.perthmint.com/\">The Perth Mint</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=perth wa&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Perth.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Australian_Cities/Sydney.js",["792","793","794","795","796","797","798","799","800","801","802","803","804"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Sydney() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"SYD\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=sydney&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Sydney\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=sydney&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Sydney!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.sydneyoperahouse.com/\">Sydney Opera House</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.bridgeclimb.com/\">Sydney Harbour Bridge</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.rbgsyd.nsw.gov.au/\">Royal Botanic Garden Sydney</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Sydney&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimesToVisit_Sydney.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Amsterdam.js",["805","806","807","808","809","810","811","812","813","814","815","816","817"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Amsterdam() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"AMS\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=amsterdam&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Amsterdam\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Amsterdam&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Amsterdam!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.rijksmuseum.nl/en\">Rijksmuseum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.vangoghmuseum.nl/en\">Van Gogh Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g188590-d190575-Reviews-The_Jordaan-Amsterdam_North_Holland_Province.html\">The Jordaan</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Amsterdam&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Amsterdam.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Budapest.js",["818","819","820","821","822","823","824","825","826","827","828","829","830"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Budapest() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"BUD\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=budapest&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Budapest\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Budapest&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Budapest!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.parlament.hu/web/visitors\">Hungarian Parliament Building</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://fishermansbastion.com/\">Halaszbastya</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.budapest.org/en/things-to-do-budapest/buda-castle/\">Buda Castle</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Budapest&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Budapest.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Dublin.js",["831","832","833","834","835","836","837","838","839","840","841","842","843"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Dublin() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"DUB\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Dublin,County Dublin,Ireland&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Dublin\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Dublin&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Dublin!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.jamesonwhiskey.com/en-ie/visit-our-distilleries/jameson-bow-street-distillery-tour/\">Jameson Distillery Bow St.</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://epicchq.com/\">EPIC The Irish Emigration Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://kilmainhamgaolmuseum.ie/\">Kilmainham Gaol Museum</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Dublin&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Dublin.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Florence.js",["844","845","846","847","848","849","850","851","852","853","854","855","856"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Florence() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"FLR\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Florence&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Florence\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Florence&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Florence!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.uffizi.it/en/the-uffizi\">Gallerie Degli Uffizi</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://duomo.firenze.it/en/home\">Piazza del Duomo</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.florence-museum.com/piazzale-michelangelo.php\">Piazzale Michelangelo</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Florence&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Florence.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Lisbon.js",["857","858","859","860","861","862","863","864","865","866","867","868","869"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Lisbon() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"LIS\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Lisbon&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Lisbon\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Lisbon&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Lisbon!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.oceanario.pt/\">Oceanario de Lisboa</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.patrimoniocultural.gov.pt/pt/museus-e-monumentos/dgpc/m/mosteiro-dos-jeronimos/\">Mosteiro dos Jeronimos</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.slbenfica.pt/\">Estadio do Sport Lisboa e Benfica</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Lisbon&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Lisbon.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/London.js",["870","871","872","873","874","875","876","877","878","879","880","881","882"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function London() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"LON\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=london&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"London\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=London&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore London!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.hrp.org.uk/tower-of-london/#gs.ikwwh2\">Tower of London</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.nationalgallery.org.uk/\">National Gallery</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.britishmuseum.org/\">The British Museum</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=London&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_London.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Madrid.js",["883","884","885","886","887","888","889","890","891","892","893","894","895"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Madrid() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"MAD\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Madrid&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Madrid\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Madrid&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Madrid!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.museodelprado.es/en\">Prado National Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.esmadrid.com/informacion-turistica/parque-del-retiro\">Parque del Retiro</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.realmadrid.com/en/santiago-bernabeu-stadium\">Santiago Bernabeu Stadium</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Madrid&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Madrid.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\"justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\"justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\"justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\"justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Milan.js",["896","897","898","899","900","901","902","903","904","905","906","907","908"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Milan() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"MIL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Milan&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Milan\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Milan&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Milan!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.duomomilano.it/en/infopage/the-cathedral/53/\">Duomo di Milano</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.introducingmilan.com/galleria-vittorio-emanuele-ii\">Galleria Vittorio Emanuele II</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.milanocastello.it/en\">Castello Sforzesco</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Milan&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Milan.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Paris.js",["909","910","911","912","913","914","915","916","917","918","919","920","921"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Paris() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"PAR\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Paris&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Paris\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Paris&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Paris!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.musee-orsay.fr/en\">Musee d'Orsay</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.notredamedeparis.fr/\">Cathedrale Notre-Dame de Paris</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.toureiffel.paris/en\">Eiffel Tower</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Paris&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Paris.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/European_Cities/Vienna.js",["922","923","924","925","926","927","928","929","930","931","932","933","934"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Vienna() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"VIE\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Vienna&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Vienna\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Vienna&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Vienna!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.schoenbrunn.at/en/\">Schonbrunn Palace</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://whc.unesco.org/en/list/1033/\">Historic Center of Vienna</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.stephanskirche.at/\">St. Stephen's Cathedral</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Vienna&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestTimeToVisit_Vienna.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/MapChart.js",["935"],[],"import  { React, memo } from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"world-110m.json\";\n\nconst MapChart = ({ setTooltipContent }) => {\n  \n  return (\n    <ComposableMap data-tip=\"\" projectionConfig={{ scale: 180, center: [20, -16]  }} style= {{backgroundColor: \"#FDF5DF\"}}>\n      <Geographies geography={geoUrl}>\n        {({ geographies }) =>\n          \n          geographies\n          .filter(d => d.properties.CONTINENT !== \"Antarctica\")\n          .map(geo => \n          <Geography \n            key={geo.rsmKey} \n            geography={geo}\n            onMouseEnter={() => {\n                const { CONTINENT} = geo.properties;\n                setTooltipContent(`${CONTINENT}`);\n              }}\n              onMouseLeave={() => {\n                setTooltipContent(\"\");\n              }} \n            fill= \"#AF8C72\"\n            stroke = \"#FDF5DF\"\n            fillOpacity= {0.9}\n            strokeOpacity= {0.5}\n            onClick={() => {\n              let continent = geo.properties.CONTINENT;      \n                if (continent === 'Asia') {\n                document.querySelector('#asia')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n                else if (continent === 'Europe') {\n                document.querySelector('#europe')\n                .scrollIntoView({ behavior: 'smooth'})\n                }\n                else if (continent === 'Oceania') {\n                document.querySelector('#australia')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n                else if (continent === 'Africa') {\n                document.querySelector('#africa')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n                else if (continent === 'Oceania') {\n                document.querySelector('#australia')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n                else if (continent === 'South America') {\n                document.querySelector('#southamerica')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n                else if (continent === 'North America') {\n                document.querySelector('#northamerica')\n                .scrollIntoView({ behavior: 'smooth' })\n                }\n            }}\n            style =  {{\n              default: { outline: \"none\" },\n              hover: {\n                fill: \"#90CDC3\",\n                stroke: \"#FDF5DF\",\n                strokeWidth: 0.76,\n                outline: \"black\",\n                \n                },\n                pressed: {\n                  fill: \"#FDF5DF\",\n                  stroke: \"#64418a\",\n                  strokeWidth: 0.76,\n                  outline: \"black\"\n                  }\n\n            }}\n         />)\n        }\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nexport default memo (MapChart);","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/Navbar.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Cancun.js",["936","937","938","939","940","941","942","943","944","945","946","947","948"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Cancun() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CUN\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=cancun&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cancun\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=CUN&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cancun!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g150807-d152700-Reviews-Playa_Delfines-Cancun_Yucatan_Peninsula.html\">Visit Playa Delfines</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://islacancun.mx/en/\">Go Shopping at La Isla Shopping Village</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.xcaret.com/en/parks-and-tours/about-xoximilco/\">Visit Xoximilco Cancun by Xcaret</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cancun&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_Cancun.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}\n\n","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/LasVegas.js",["949","950","951","952","953","954","955","956","957","958","959","960","961"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function LasVegas() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        const destination = \"LAS\" \n\n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=lasvegas&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"LasVegas\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=LAS&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Las Vegas!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.lasvegashowto.com/las-vegas-strip-map\">The Strip</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.redrockcanyonlv.org/\">Red Rock Canyon National Conservation Area</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.caesars.com/linq/things-to-do/attractions/high-roller\">High Roller</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=lasvegas&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_LasVegas.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}\n\n","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/LosAngeles.js",["962","963","964","965","966","967","968","969","970","971","972","973","974"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function LosAngeles() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"LAX\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=los angeles&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"LosAngeles\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=LAX&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Los Angeles!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.getty.edu/\">The Getty Center</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://griffithobservatory.org/\">Griffith Observatory</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.universalstudioshollywood.com/web/en/us\">Universal Studios Hollywood</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=LosAngeles&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_LosAngeles.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/MexicoCity.js",["975","976","977","978","979","980","981","982","983","984","985","986","987"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function MexicoCity() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{       \n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        const destination = \"MEX\" \n\n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n       \n    }catch(error){\n\n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=mexico city&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"MexicoCity\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=MEX&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Mexico City!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.mna.inah.gob.mx/\">Museo Nacional de Antropologia</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://mnh.inah.gob.mx/general-information\">Chapultepec Castle</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://virgendeguadalupe.org.mx/en/\">Basilica de Santa Maria de Guadalupe</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=MexicoCity&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_MexicoCity.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n   \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n   \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/NewYork.js",["988","989","990","991","992","993","994","995","996","997","998","999","1000"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function NewYork() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"NYC\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=new york city&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"NewYork\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=NYC&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore New York!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.timessquarenyc.org/\">Times Square</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.911memorial.org/\">The National 9/11 Memorial Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.bbg.org/\">Brooklyn Botanic Garden</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=NewYork&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_NewYork.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Orlando.js",["1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Orlando() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"MCO\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=orlando&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Orlando\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=ORL&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Orlando!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://disneyworld.disney.go.com/destinations/magic-kingdom/\">Magic Kingdom Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.universalorlando.com/web/en/us\">Epcot</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://disneyworld.disney.go.com/destinations/epcot/\">The Wizarding World of Harry Potter, Universal Studios</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Orlando&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_Orlando.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/SanDiego.js",["1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function SanDiego() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"SAN\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=san diego&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"San Diego\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=SAN&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore San Diego!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.midway.org/\">USS Midway Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://lajollamom.com/la-jolla-cove/\">La Jolla Cove</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://sandiegozoowildlifealliance.org/\">San Diego Zoo</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=SanDiego&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_SanDiego.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/SanFrancisco.js",["1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function SanFrancisco() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"SFO\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=san francisco&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"San Francisco\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=SFO&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore San Francisco! </h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.goldengate.org/\">Golden Gate Bridge</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.palaceoffinearts.org/\">Palace of Fine Arts Theatre</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.mlb.com/giants/ballpark\">Oracle Park</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=SanFrancisco&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_SanFrancisco.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Seattle.js",["1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Seattle() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"SEA\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=seattle&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Seattle\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=SEA&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Seattle! </h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.chihulygardenandglass.com/\">Chihuly Garden and Glass</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.museumofflight.org/\">The Museum of Flight</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.pikeplacemarket.org/\">Pike Place Market</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Seattle&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_Seattle.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/NorthAmerican_Cities/Toronto.js",["1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Toronto() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n  \n    const axiosPosts = async () => {\n        \n        try{\n        \n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n\n        const destination = \"YTO\" \n        \n        /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n        if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n        \n      \n        \n        \n        \n    }catch(error){\n        \n        \n\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n       \n        \n    }, []);\n    \n   \n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=toronto&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Toronto\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=YTO&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Toronto! </h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.cntower.ca/\">CN Tower</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.toronto.ca/explore-enjoy/parks-gardens-beaches/toronto-island-park/\">Toronto Island Park</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.ripleyaquariums.com/canada/\">Ripley's Aquarium of Canada</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=Toronto&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToTravel_Toronto.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n \n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                            \n                    \n                \n                                </Grid>\n                            </Grid>\n                        </Card>\n                        \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        \n                       \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n  \n    \n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Bogota.js",["1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078"],[],"import React, { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Bogota() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"BOG\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=bogota&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Bogota,Colombia\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=bogota&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Bogota!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://colombia.travel/en/bogota/gold-museum\">Gold Museum</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://monserrate.co/en/welcome-a-monserrate/\">Mount Monserrate</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.banrepcultural.org/bogota/museo-botero\">Museo Botero del Banco de la Republica</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=bogotacolombia&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Bogota.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}\n\n","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/BuenosAires.js",["1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function BuenosAires() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"EZE\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Buenos Aires&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Buenos Aires\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=BuenosAires&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Buenos Aires!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://teatrocolon.org.ar/es\">Teatro Colon</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g312741-d311777-Reviews-Puerto_Madero-Buenos_Aires_Capital_Federal_District.html\">Puerto Madero</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://theculturetrip.com/south-america/argentina/articles/things-to-do-and-see-in-recoleta-buenos-aires/\">Recoleta</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=buenosaires&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_BuenosAires.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cali.js",["1092","1093","1094","1095","1096","1097","1098","1099","1100","1101","1102","1103","1104"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Cali() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CLO\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=cali&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cali\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=cali,colombia&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cali!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.zoologicodecali.com.co/\">Zoologico de Cali</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/AttractionToursAndTickets-g297475-d2513557-Cristo_Rey-Cali_Valle_del_Cauca_Department.html\">Cristo Rey</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g297475-d1967820-Reviews-Iglesia_de_San_Antonio-Cali_Valle_del_Cauca_Department.html\">Igelsia de San Antonio</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                        {yelpData.data ? <p>Hello</p>: null}\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cali&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_CaliColombia.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cartagena.js",["1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Cartagena() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CTG\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=cartagena&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cartagena\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=cartagena&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cartagena!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"http://www.cartagenainfo.net/saintpeterclaver/\">Sanctuary of Saint Peter Claver</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g297476-d315386-Reviews-Castillo_de_San_Felipe_de_Barajas-Cartagena_Cartagena_District_Bolivar_Department.html\">Castillo de San Felipe de Barajas</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g297476-d10300403-Reviews-Barrio_Getsemani-Cartagena_Cartagena_District_Bolivar_Department.html\">Barrio Getsemani</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                        {yelpData.data ? <p>Hello</p>: null}\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cartagena&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Cartagena.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}\n\n","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Cusco.js",["1118","1119","1120","1121","1122","1123","1124","1125","1126","1127","1128","1129","1130"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Cusco() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"CUZ\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=cusco&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Cusco\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=cusco&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Cusco!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.cuscoperu.com/en/travel/cusco/archaeological-centers/sacsayhuaman\">Sacsayhuaman</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/AttractionToursAndTickets-g294314-d12158251-Humantay_Lake-Cusco_Cusco_Region.html\">Humantay Lake</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.peru.travel/es/atractivos/centro-historico-de-cusco\">Centro Historico De Cusco</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=cusco&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Cusco.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Lima.js",["1131","1132","1133","1134","1135","1136","1137","1138","1139","1140","1141","1142","1143"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Lima() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"LIM\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=lima&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Lima\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=lima&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Lima!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.museolarco.org/en/\">Museo Larco</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.es/Attraction_Review-g294316-d311718-Reviews-Miraflores-Lima_Lima_Region.html\">Miraflores</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.circuitomagicodelagua.com.pe/\">Circuito Magico Del Agua</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=lima&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Lima.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Medellin.js",["1144","1145","1146","1147","1148","1149","1150","1151","1152","1153","1154","1155","1156"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Medellin() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"MDE\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=medellin&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Medellin\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=medellin&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Medellin!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://museodeantioquia.co/sitio2/\">Museo de Antioquia</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g297478-d3776131-Reviews-Laguna_de_Guatape-Medellin_Antioquia_Department.html\">Laguna de Guatape</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.atlasobscura.com/places/casa-museo-pablo-escobar\">Museum Pablo Escobar</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=medellin&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Medellin.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/RioDeJaneiro.js",["1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function RioDeJaneiro() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"RIO\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=rio de janeiro&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Rio De Janiero\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Rio De Janiero&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Rio de Janeiro!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.rio.com/sugarloaf\">Sugarloaf Mountain</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/AttractionToursAndTickets-g303506-d554128-Corcovado_Christ_the_Redeemer-Rio_de_Janeiro_State_of_Rio_de_Janeiro.html\">Corcovado - Christ the Redeemer</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://riotur.rio/en/que_fazer/botanicalgarden/\">Botanical Garden</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=riodejaniero&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Rio.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/Santiago.js",["1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function Santiago() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"SCL\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Santiago&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Santiago\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=Santiago&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Santiago!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com.br/Attraction_Review-g303631-d311966-Reviews-Parque_Ibirapuera-Sao_Paulo_State_of_Sao_Paulo.html\">Parque Ibirapuera</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g303631-d550339-Reviews-Paulista_Avenue-Sao_Paulo_State_of_Sao_Paulo.html\">Paulista Avenue</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g303631-d4377562-Reviews-Neo_Quimica_Arena-Sao_Paulo_State_of_Sao_Paulo.html\">Neo Quimica Arena</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=santiago&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_Santiago.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/SouthAmerican_Cities/SaoPaulo.js",["1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195"],[],"import React from 'react';\nimport { useEffect, useState } from 'react';\nimport {Button, Grid } from '@mui/material';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport Router from 'next/router';\nimport HomeIcon from '@mui/icons-material/Home';\n\nexport default function SaoPaulo() {\n\nconst [status, setStatus] = useState(\"idle\");\nconst [ipaddressdata , setIpaddressData] = useState([{\n    data: \"\",\n    iata: \"\"\n}]);\n\nconst [status2, setStatus2] = useState(\"idle\");\nconst [flightData , setFlightData] = useState([{\n    data: \"\",\n    value: \"\",\n}]);\n\nuseEffect(() => {\n    setStatus(\"pending\");\n    setStatus2(\"pending\");\n\n    const axiosPosts = async () => {\n\n        try{\n\n        const response = await axios(\"https://www.travelpayouts.com/whereami?ip=\")\n        setIpaddressData(response.data)\n        setStatus(\"resolved\")\n        \n        \n        const destination = \"GRU\" \n\n         /* Conditional IF Statement included for. Flight origin and destination logically be the same. If so, API is not fetched. */\n         if(response.data.iata !== destination){\n        const response2 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://api.travelpayouts.com/v2/prices/latest?currency=usd&period_type=year&page=1&duration=hour&limit=5&origin=${response.data.iata}&destination=${destination}&show_to_affiliates=true&sorting=price&token=1fb2829993009e6a7db3163d4d00a1ff`)\n        setFlightData(response2.data)\n        setStatus2(\"resolved\")\n        }\n        \n    }catch(error){\n        console.log(error);\n        setStatus(\"rejected\");\n\n        console.log(error);\n        setStatus2(\"rejected\");\n        }\n        };\n        axiosPosts();\n    }, []);\n\n    \nconst apiKey = '6ca5492956c0cad241e72a5b6126ed5f'\nconst [weatherData, setWeatherData] = useState([{}])\nconst [city, setCity] = useState(\"\")\n\nuseEffect(() => {\nfetch('https://api.openweathermap.org/data/2.5/weather?q=Sao Paulo&units=imperial&APPID=6ca5492956c0cad241e72a5b6126ed5f').then(response => response.json()).then(data => setWeatherData(data));\n}, [])\n\nconst YELPapiKey =\n\"34_H2aphTr2KCBnKHh-VkawG67HFJBMMLBjR51PVjwQYDNIPDpc_vIICnjYMmhU37ZnzBz04Ua82FYi-Y180FFBZOatgcijVBtij-UpZw4j-eZ778tPmMP7kh6fNYnYx\";\nconst [yelpData, setYelpData] = useState([{}])\nconst [location, setLoction] = useState(\"\")\n\nuseEffect(() => {\naxios.get(`${'https://cors-anywhere.herokuapp.com/'}https://api.yelp.com/v3/businesses/search`, {\n    headers: {\n        Authorization: `Bearer ${YELPapiKey}`\n    },\n    params: {\n        limit: 6,\n        location: \"Sao Paulo\",\n        sort_by: \"best_match\"\n      }\n  }).then(data => setYelpData(data))\n}, [])\n\n\n\nfunction timeConvert(n) {\n    var num = n;\n    var hours = (num / 60);\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    return rhours + \" hr \" + rminutes + \" min\";\n    }\n\n    function convertDate(dateString){\n        var p = dateString.split(/\\D/g)\n        return [p[1],p[2],p[0] ].join(\"-\")\n        }\n\n    var selecteddate;\n    var dateformatted;\n        \n    const SelectedCheckInDate = () => {\n        const [startDate, setStartDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={startDate} \n            onChange={(date=Date) => {\n                setStartDate(date);\n                selecteddate = date;\n                dateformatted = String(selecteddate.getFullYear()) + \"-\" + String((selecteddate.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n\n    var selecteddate2;\n    var dateformatted2;\n\n    const SelectedCheckOutDate = () => {\n        const [endDate, setEndDate] = useState(new Date());\n        return (\n            <DatePicker \n            selected={endDate} \n            onChange={(date=Date) => {\n                setEndDate(date);\n                selecteddate2 = date;\n                dateformatted2 = String(selecteddate2.getFullYear()) + \"-\" + String((selecteddate2.getMonth() + 1)).padStart(2, '0') + \"-\" + String(selecteddate2.getDate()).padStart(2, '0')\n            }\n            } \n            dateFormat=\"yyyy-MM-dd\" />\n        );\n    }\n  \n    const [status3, setStatus3] = useState(\"idle\");\n    const [hoteldata , setHotelData] = useState([{\n        location: \"\",\n        geo: \"\",\n        hotelName: \"\"\n    }]);\n    \n    function clickHandler(){\n        setStatus3(\"pending\"); \n        const axiosPosts = async () => {\n            try{\n            const response3 = await axios(`${'https://cors-anywhere.herokuapp.com/'}https://engine.hotellook.com/api/v2/cache.json?location=SaoPaulo&checkIn=${dateformatted}&checkOut=${dateformatted2}&currency=usd&limit=20&sortBy=priceFrom&token=1fb2829993009e6a7db3163d4d00a1ff`)\n            setHotelData(response3.data)\n            setStatus3(\"resolved\")\n        }catch(error){\n            setStatus3(\"rejected\");\n            }\n            };\n            axiosPosts();\n    }\n\n    \n        \nreturn (\n<Grid container spacing={3} style= {{backgroundColor: \"#FDF5DF\"}} >\n\n    {/* Explore Widget  */}\n    <Grid item xs={8}  >\n        <Card  style={{backgroundColor: \"#F3CBBD\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <br></br>\n                <br></br>\n                <h1 style={{color: \"black\" , fontSize: 46, fontFamily: \"Fantasy\"}} >Explore Sao Paulo!</h1> \n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com.br/Attraction_Review-g303631-d311966-Reviews-Parque_Ibirapuera-Sao_Paulo_State_of_Sao_Paulo.html\">Parque Ibirapuera</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href=\"https://www.tripadvisor.com/Attraction_Review-g303631-d550339-Reviews-Paulista_Avenue-Sao_Paulo_State_of_Sao_Paulo.html\">Paulista Avenue</a></div>\n                <br></br>\n                <div><a target=\"_blank\" style={{fontFamily: \"Optima\", color: \"black\", fontSize: 25, textDecoration: \"none\"}}  href= \"https://www.tripadvisor.com/Attraction_Review-g303631-d4377562-Reviews-Neo_Quimica_Arena-Sao_Paulo_State_of_Sao_Paulo.html\">Neo Quimica Arena</a></div> \n                <br></br>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Weather Widget  */}\n    <Grid item xs={4}>\n        <Card  style={{backgroundColor: \"#90CDC3\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                <div>\n                    {weatherData.main ?  <h1 style={{color: \"#FDF5DF\", fontSize: 80, height: 80}}>{Math.round(weatherData.main.temp)}° </h1> : null }\n                    {weatherData.weather ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25}}>{weatherData.weather[0].main} </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 15}}>Real Feel: {Math.round(weatherData.main.feels_like)}° F </p> : null }\n                    {weatherData.main ? <p style={{fontFamily: \"Optima\", color: \"Black\", fontSize: 25, height: 24}}>Humidity: {weatherData.main.humidity}% </p> : null }\n                </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n\n    {/* Restaurant Widget */} \n    <Grid item xs={8}>\n        <Card style={{backgroundColor: \"#AF8C72\"}}  sx={{ align:\"center\",display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\" align=\"center\">\n                    <div>\n                    <h1 style={{color: \"#FDF5DF\" , fontSize: 46, fontFamily: \"Fantasy\"}} align=\"center\" >Top Rated Restaurants</h1> \n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 2, borderColor: 'white', borderRadius: '0px' }} >\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[0].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[1].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[2].name}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[3].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[4].name}</p> : null }\n                            {yelpData.data ? <p style={{color: \"black\", fontFamily: \"cursive\", fontSize: 25, textDecoration: \"none\"}}>{yelpData.data.businesses[5].name}</p> : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                    <br></br>\n                    \n                    <Grid container spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                        <Button rel=\"noopener\" href= \"https://www.yelp.com/search?find_desc=Restaurants&find_loc=saopaulo&sortby=recommended\" color='success' target=\"_blank\" variant=\"contained\">Yelp</Button>\n                    </Grid>\n                    </div> \n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Suggested Travel Months Widget */}\n    <Grid item xs={4}>\n        <Card style={{backgroundColor: \"white\"}}  sx={{ display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }}>\n            <CardContent sx={{ width: '100%' }}>\n                <Typography  gutterBottom variant=\"overline\" component=\"div\" align=\"center\">\n                <div>\n                <img src=\"/BestMonthsToVisit_SaoPaulo.png\" width=\"100%\" height=\"100%\"/>\n                </div>\n                <br></br>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Hotels Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#8DA47E\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                <h1 style={{color: \"#FDF5DF\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Hotels</h1> \n                \n                    <Grid>\n                        <CardContent sx={{ display: 'flex' }}>\n                            <Grid item xs={6}>\n                            <h1 align= \"left\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - In</h1>\n                            <SelectedCheckInDate popperPlacement=\"bottom-start\" />\n                            </Grid>\n                            \n                            <Grid item xs={6} align=\"right\">\n                            <h1 align= \"right\" style={{fontFamily: \"Fantasy\", color:'#FDF5DF'}}>Check - Out</h1>\n                            <SelectedCheckOutDate popperPlacement=\"bottom-end\"/>\n                            </Grid>\n                        </CardContent>\n                        \n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button onClick={() => {clickHandler() }} color='success' rel=\"noopener\" target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n                        <br></br>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[0].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[0].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[0].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[1] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[1].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[1].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[1] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[1].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[2] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[2].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[2].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[2] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[2].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n\n                    <Grid container spacing={1}></Grid>\n                        <Grid item xs={12}>\n                        {hoteldata[3] ? <p style={{textAlign:\"center\", color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[3].hotelName}</b> </p>  : null }\n                        </Grid>\n                        <Grid container spacing={1}>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[3].priceFrom)} USD </p>  : null }\n                        </Grid>\n                        <Grid item xs={6}>\n                        {hoteldata[3] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"#FDF5DF\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[3].stars} Star Rating</p>  : null }\n                        </Grid>\n                    </Grid>\n                    \n                    <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                        <Grid container spacing={1}></Grid>\n                            <Grid item xs={12}>\n                            {hoteldata[4] ? <p style={{textAlign:\"center\", color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b> {hoteldata[4].hotelName}</b> </p>  : null }\n                            </Grid>\n                            <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"left\",marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>From:</b> ${Math.round(hoteldata[4].priceFrom)} USD </p>  : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {hoteldata[4] ? <p style={{textAlign:\"right\",marginRight: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b></b> {hoteldata[4].stars} Star Rating</p>  : null }\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n\n    {/* Flight Widget */}\n    <Grid item xs={6}>\n        <Card style={{backgroundColor: \"#F3CBBD\"}}  sx={{fontFamily: \"Optima\",  display: 'flex', border: 4, borderColor: 'black', borderRadius: '16px' }} >\n            <CardContent sx={{ width: '100%' }}>\n                <Typography gutterBottom variant=\"h7\" component=\"div\">\n                    <h1 style={{color: \"black\" , fontSize: 40, fontWeight: 'bold', fontFamily: \"Fantasy\"}} align=\"center\" >Cheapest Flights</h1> \n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b> {flightData.data[0].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[0].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b> {convertDate(flightData.data[0].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b> {flightData.data[0].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[0].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[0].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n                    \n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[1].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b>${flightData.data[1].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[1].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[1].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[1].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[1].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                    \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[2].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[2].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[2].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[2].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[2].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[2].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container spacing={1}>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[3].origin} </p>  : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[3].value}.00 USD</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[3].depart_date)}</p> : null }\n                            </Grid>\n                            <Grid item xs={6}>\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[3].destination}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[3].duration)}</p> : null }\n                            {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[3].return_date)}</p> : null }\n                            </Grid>\n                        </Grid>\n                \n                        <Card style={{backgroundColor: \"#FDF5DF\"}}  sx={{ display: 'flex', border: 3, borderColor: '#AF8C72', borderRadius: '0px' }} >\n                            <Grid container spacing={1}>\n                                <Grid item xs={6}>\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Origin Airport:</b>  {flightData.data[4].origin} </p>  : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Price:</b> ${flightData.data[4].value}.00 USD</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Depart Date:</b>  {convertDate(flightData.data[4].depart_date)}</p> : null }\n                                </Grid>\n                                <Grid item xs={6}>\n                                    \n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Destination Airport:</b>  {flightData.data[4].destination}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Duration:</b> {timeConvert(flightData.data[4].duration)}</p> : null }\n                                {flightData.data ? <p style={{marginLeft: 15, color: \"black\", fontSize: 21, textDecoration: \"none\"}}> <b>Return Date:</b> {convertDate(flightData.data[4].return_date)}</p> : null }\n                                </Grid>\n                            </Grid>\n                        </Card>\n\n                        <Grid container sx={{ p: 2 }} spacing={0} display=\"flex\" justifyContent=\"center\" alignItems=\"justify-end\">\n                            <Button rel=\"noopener\" href= \"https://www.skyscanner.com/\" color= 'success' target=\"_blank\" variant=\"contained\">Search</Button>\n                        </Grid>\n\n                </Typography>\n            </CardContent>\n        </Card>\n    </Grid>\n\n    <Grid container sx={{ p: 3 }} spacing={0} display=\"flex\" justifyContent=\"center\">\n    <Button onClick={() => Router.back()} style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}} rel=\"noopener\" justifyContent=\"center\" color= 'success' target=\"_blank\" >\n        <HomeIcon style={{maxWidth: '100px', maxHeight: '100px', minWidth: '100px', minHeight: '100px'}}/>\n    </Button>\n    \n    \n      \n    </Grid>\n\n</Grid>\n\n\n);\n}","/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Africa.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Asia.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Australia.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/Europe.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/NorthAmerica.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/continents/SouthAmerica.js",[],[],"/Users/jensil/Desktop/DeveloperProjects/Travel_Website/frontend/pages/index.js",[],[],{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":235,"fix":"1212"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":245,"fix":"1213"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":246,"fix":"1214"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":262,"fix":"1217"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":256,"fix":"1218"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":167,"fix":"1219"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":189,"fix":"1220"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":244,"fix":"1221"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":257,"fix":"1222"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":161,"fix":"1223"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":164,"fix":"1224"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":253,"fix":"1225"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":262,"fix":"1226"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":256,"fix":"1227"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":167,"fix":"1228"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":174,"fix":"1229"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":183,"fix":"1230"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":233,"fix":"1231"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":254,"fix":"1232"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":164,"fix":"1233"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":242,"fix":"1234"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1235"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":160,"fix":"1236"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":171,"fix":"1237"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":174,"fix":"1238"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":183,"fix":"1239"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":233,"fix":"1240"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":169,"fix":"1241"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":248,"fix":"1242"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":266,"fix":"1243"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1244","line":1,"column":8,"nodeType":"1198","messageId":"1199","endLine":1,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":207,"fix":"1245"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":165,"fix":"1246"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":247,"fix":"1247"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":82},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":185,"fix":"1248"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":201,"fix":"1249"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":167,"fix":"1250"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":165,"fix":"1251"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":199,"fix":"1252"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":165,"fix":"1253"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":168,"fix":"1254"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":172,"fix":"1255"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":166,"fix":"1256"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":173,"fix":"1257"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":186,"fix":"1258"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":180,"fix":"1259"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":89},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":161,"fix":"1260"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":165,"fix":"1261"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":238,"fix":"1262"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":161,"fix":"1263"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":158,"fix":"1264"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":164,"fix":"1265"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":195,"fix":"1266"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":221,"fix":"1267"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":190,"fix":"1268"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1269"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":179,"fix":"1270"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":197,"fix":"1271"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":167,"fix":"1272"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":186,"fix":"1273"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":176,"fix":"1274"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":167,"fix":"1275"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":172,"fix":"1276"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":163,"fix":"1277"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":175,"fix":"1278"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":158,"fix":"1279"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":167,"fix":"1280"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1281"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":233,"fix":"1282"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":168,"fix":"1283"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":158,"fix":"1284"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":158,"fix":"1285"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":223,"fix":"1286"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":168,"fix":"1287"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":201,"fix":"1288"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":196,"fix":"1289"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":91},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":242,"fix":"1290"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":159,"fix":"1291"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":162,"fix":"1292"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":167,"fix":"1293"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":163,"fix":"1294"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":164,"fix":"1295"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":171,"fix":"1296"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":162,"fix":"1297"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":159,"fix":"1298"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":172,"fix":"1299"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":193,"fix":"1300"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":162,"fix":"1301"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":168,"fix":"1302"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":163,"fix":"1303"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":166,"fix":"1304"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":164,"fix":"1305"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":166,"fix":"1306"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":255,"fix":"1307"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":172,"fix":"1308"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":165,"fix":"1309"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":198,"fix":"1310"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":230,"fix":"1311"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":155,"fix":"1312"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":168,"fix":"1313"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1314"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":167,"fix":"1315"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":193,"fix":"1316"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":160,"fix":"1317"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":226,"fix":"1318"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":161,"fix":"1319"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":184,"fix":"1320"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":170,"fix":"1321"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":166,"fix":"1322"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":166,"fix":"1323"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":199,"fix":"1324"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":191,"fix":"1325"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":191,"fix":"1326"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":197,"fix":"1327"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":168,"fix":"1328"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":164,"fix":"1329"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":167,"fix":"1330"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":167,"fix":"1331"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":165,"fix":"1332"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":171,"fix":"1333"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":166,"fix":"1334"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1335","line":6,"column":3,"nodeType":"1198","messageId":"1199","endLine":6,"endColumn":9},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":137,"column":12,"nodeType":"1198","messageId":"1199","endLine":137,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":171,"column":22,"nodeType":"1210","messageId":"1211","endLine":171,"endColumn":249,"fix":"1336"},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":160,"fix":"1337"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":194,"fix":"1338"},{"ruleId":"1215","severity":1,"message":"1216","line":241,"column":17,"nodeType":"1210","endLine":241,"endColumn":87},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":59,"column":7,"nodeType":"1198","messageId":"1199","endLine":59,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":61,"column":8,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":61,"column":14,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":70,"column":8,"nodeType":"1198","messageId":"1199","endLine":70,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":70,"column":18,"nodeType":"1198","messageId":"1199","endLine":70,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":135,"column":12,"nodeType":"1198","messageId":"1199","endLine":135,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":169,"column":22,"nodeType":"1210","messageId":"1211","endLine":169,"endColumn":184,"fix":"1339"},{"ruleId":"1208","severity":1,"message":"1209","line":171,"column":22,"nodeType":"1210","messageId":"1211","endLine":171,"endColumn":167,"fix":"1340"},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":201,"fix":"1341"},{"ruleId":"1215","severity":1,"message":"1216","line":239,"column":17,"nodeType":"1210","endLine":239,"endColumn":89},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":60,"column":7,"nodeType":"1198","messageId":"1199","endLine":60,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":62,"column":8,"nodeType":"1198","messageId":"1199","endLine":62,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":62,"column":14,"nodeType":"1198","messageId":"1199","endLine":62,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":71,"column":8,"nodeType":"1198","messageId":"1199","endLine":71,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":71,"column":18,"nodeType":"1198","messageId":"1199","endLine":71,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":136,"column":12,"nodeType":"1198","messageId":"1199","endLine":136,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":170,"column":22,"nodeType":"1210","messageId":"1211","endLine":170,"endColumn":157,"fix":"1342"},{"ruleId":"1208","severity":1,"message":"1209","line":172,"column":22,"nodeType":"1210","messageId":"1211","endLine":172,"endColumn":167,"fix":"1343"},{"ruleId":"1208","severity":1,"message":"1209","line":174,"column":22,"nodeType":"1210","messageId":"1211","endLine":174,"endColumn":187,"fix":"1344"},{"ruleId":"1215","severity":1,"message":"1216","line":240,"column":17,"nodeType":"1210","endLine":240,"endColumn":91},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":66,"column":7,"nodeType":"1198","messageId":"1199","endLine":66,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":68,"column":8,"nodeType":"1198","messageId":"1199","endLine":68,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":68,"column":14,"nodeType":"1198","messageId":"1199","endLine":68,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":77,"column":8,"nodeType":"1198","messageId":"1199","endLine":77,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":77,"column":18,"nodeType":"1198","messageId":"1199","endLine":77,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":142,"column":12,"nodeType":"1198","messageId":"1199","endLine":142,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":176,"column":22,"nodeType":"1210","messageId":"1211","endLine":176,"endColumn":163,"fix":"1345"},{"ruleId":"1208","severity":1,"message":"1209","line":178,"column":22,"nodeType":"1210","messageId":"1211","endLine":178,"endColumn":178,"fix":"1346"},{"ruleId":"1208","severity":1,"message":"1209","line":180,"column":22,"nodeType":"1210","messageId":"1211","endLine":180,"endColumn":172,"fix":"1347"},{"ruleId":"1215","severity":1,"message":"1216","line":246,"column":17,"nodeType":"1210","endLine":246,"endColumn":91},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":166,"fix":"1348"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":163,"fix":"1349"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":156,"fix":"1350"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":196,"fix":"1351"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":177,"fix":"1352"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":189,"fix":"1353"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":158,"fix":"1354"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":172,"fix":"1355"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":176,"fix":"1356"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":89},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":162,"fix":"1357"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":168,"fix":"1358"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":171,"fix":"1359"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":93},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":173,"fix":"1360"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":166,"fix":"1361"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":168,"fix":"1362"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":73,"column":7,"nodeType":"1198","messageId":"1199","endLine":73,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":75,"column":8,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":75,"column":14,"nodeType":"1198","messageId":"1199","endLine":75,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":84,"column":8,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":84,"column":18,"nodeType":"1198","messageId":"1199","endLine":84,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":149,"column":12,"nodeType":"1198","messageId":"1199","endLine":149,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":183,"column":22,"nodeType":"1210","messageId":"1211","endLine":183,"endColumn":158,"fix":"1363"},{"ruleId":"1208","severity":1,"message":"1209","line":185,"column":22,"nodeType":"1210","messageId":"1211","endLine":185,"endColumn":214,"fix":"1364"},{"ruleId":"1208","severity":1,"message":"1209","line":187,"column":22,"nodeType":"1210","messageId":"1211","endLine":187,"endColumn":175,"fix":"1365"},{"ruleId":"1215","severity":1,"message":"1216","line":253,"column":17,"nodeType":"1210","endLine":253,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":14,"column":8,"nodeType":"1198","messageId":"1199","endLine":14,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":20,"column":8,"nodeType":"1198","messageId":"1199","endLine":20,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":60,"column":7,"nodeType":"1198","messageId":"1199","endLine":60,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":62,"column":8,"nodeType":"1198","messageId":"1199","endLine":62,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":62,"column":14,"nodeType":"1198","messageId":"1199","endLine":62,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":71,"column":8,"nodeType":"1198","messageId":"1199","endLine":71,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":71,"column":18,"nodeType":"1198","messageId":"1199","endLine":71,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":138,"column":12,"nodeType":"1198","messageId":"1199","endLine":138,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":172,"column":22,"nodeType":"1210","messageId":"1211","endLine":172,"endColumn":180,"fix":"1366"},{"ruleId":"1208","severity":1,"message":"1209","line":174,"column":22,"nodeType":"1210","messageId":"1211","endLine":174,"endColumn":181,"fix":"1367"},{"ruleId":"1208","severity":1,"message":"1209","line":176,"column":22,"nodeType":"1210","messageId":"1211","endLine":176,"endColumn":186,"fix":"1368"},{"ruleId":"1215","severity":1,"message":"1216","line":243,"column":17,"nodeType":"1210","endLine":243,"endColumn":86},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":164,"fix":"1369"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":261,"fix":"1370"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":242,"fix":"1371"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":91},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1372"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":253,"fix":"1373"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":266,"fix":"1374"},{"ruleId":"1215","severity":1,"message":"1216","line":245,"column":17,"nodeType":"1210","endLine":245,"endColumn":92},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":181,"fix":"1375"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":291,"fix":"1376"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":277,"fix":"1377"},{"ruleId":"1215","severity":1,"message":"1216","line":245,"column":17,"nodeType":"1210","endLine":245,"endColumn":89},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":212,"fix":"1378"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":244,"fix":"1379"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":199,"fix":"1380"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":85},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":165,"fix":"1381"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":236,"fix":"1382"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":177,"fix":"1383"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":84},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":170,"fix":"1384"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":258,"fix":"1385"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":196,"fix":"1386"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":164,"fix":"1387"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":278,"fix":"1388"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":184,"fix":"1389"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":83},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":259,"fix":"1390"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":254,"fix":"1391"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":258,"fix":"1392"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},{"ruleId":"1196","severity":1,"message":"1197","line":15,"column":8,"nodeType":"1198","messageId":"1199","endLine":15,"endColumn":14},{"ruleId":"1196","severity":1,"message":"1200","line":16,"column":8,"nodeType":"1198","messageId":"1199","endLine":16,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1201","line":21,"column":8,"nodeType":"1198","messageId":"1199","endLine":21,"endColumn":15},{"ruleId":"1196","severity":1,"message":"1202","line":61,"column":7,"nodeType":"1198","messageId":"1199","endLine":61,"endColumn":13},{"ruleId":"1196","severity":1,"message":"1203","line":63,"column":8,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":12},{"ruleId":"1196","severity":1,"message":"1204","line":63,"column":14,"nodeType":"1198","messageId":"1199","endLine":63,"endColumn":21},{"ruleId":"1196","severity":1,"message":"1205","line":72,"column":8,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":16},{"ruleId":"1196","severity":1,"message":"1206","line":72,"column":18,"nodeType":"1198","messageId":"1199","endLine":72,"endColumn":28},{"ruleId":"1196","severity":1,"message":"1207","line":139,"column":12,"nodeType":"1198","messageId":"1199","endLine":139,"endColumn":19},{"ruleId":"1208","severity":1,"message":"1209","line":173,"column":22,"nodeType":"1210","messageId":"1211","endLine":173,"endColumn":259,"fix":"1393"},{"ruleId":"1208","severity":1,"message":"1209","line":175,"column":22,"nodeType":"1210","messageId":"1211","endLine":175,"endColumn":254,"fix":"1394"},{"ruleId":"1208","severity":1,"message":"1209","line":177,"column":22,"nodeType":"1210","messageId":"1211","endLine":177,"endColumn":258,"fix":"1395"},{"ruleId":"1215","severity":1,"message":"1216","line":244,"column":17,"nodeType":"1210","endLine":244,"endColumn":88},"no-unused-vars","'status' is assigned a value but never used.","Identifier","unusedVar","'ipaddressdata' is assigned a value but never used.","'status2' is assigned a value but never used.","'apiKey' is assigned a value but never used.","'city' is assigned a value but never used.","'setCity' is assigned a value but never used.","'location' is assigned a value but never used.","'setLoction' is assigned a value but never used.","'status3' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"1396","text":"1397"},{"range":"1398","text":"1397"},{"range":"1399","text":"1397"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"1400","text":"1397"},{"range":"1401","text":"1397"},{"range":"1402","text":"1397"},{"range":"1403","text":"1397"},{"range":"1404","text":"1397"},{"range":"1405","text":"1397"},{"range":"1406","text":"1397"},{"range":"1407","text":"1397"},{"range":"1408","text":"1397"},{"range":"1409","text":"1397"},{"range":"1410","text":"1397"},{"range":"1411","text":"1397"},{"range":"1412","text":"1397"},{"range":"1413","text":"1397"},{"range":"1414","text":"1397"},{"range":"1415","text":"1397"},{"range":"1416","text":"1397"},{"range":"1417","text":"1397"},{"range":"1418","text":"1397"},{"range":"1419","text":"1397"},{"range":"1420","text":"1397"},{"range":"1421","text":"1397"},{"range":"1422","text":"1397"},{"range":"1423","text":"1397"},{"range":"1424","text":"1397"},{"range":"1425","text":"1397"},{"range":"1426","text":"1397"},"'React' is defined but never used.",{"range":"1427","text":"1397"},{"range":"1428","text":"1397"},{"range":"1429","text":"1397"},{"range":"1430","text":"1397"},{"range":"1431","text":"1397"},{"range":"1432","text":"1397"},{"range":"1433","text":"1397"},{"range":"1434","text":"1397"},{"range":"1435","text":"1397"},{"range":"1436","text":"1397"},{"range":"1437","text":"1397"},{"range":"1438","text":"1397"},{"range":"1439","text":"1397"},{"range":"1440","text":"1397"},{"range":"1441","text":"1397"},{"range":"1442","text":"1397"},{"range":"1443","text":"1397"},{"range":"1444","text":"1397"},{"range":"1445","text":"1397"},{"range":"1446","text":"1397"},{"range":"1447","text":"1397"},{"range":"1448","text":"1397"},{"range":"1449","text":"1397"},{"range":"1450","text":"1397"},{"range":"1451","text":"1397"},{"range":"1452","text":"1397"},{"range":"1453","text":"1397"},{"range":"1454","text":"1397"},{"range":"1455","text":"1397"},{"range":"1456","text":"1397"},{"range":"1457","text":"1397"},{"range":"1458","text":"1397"},{"range":"1459","text":"1397"},{"range":"1460","text":"1397"},{"range":"1461","text":"1397"},{"range":"1462","text":"1397"},{"range":"1463","text":"1397"},{"range":"1464","text":"1397"},{"range":"1465","text":"1397"},{"range":"1466","text":"1397"},{"range":"1467","text":"1397"},{"range":"1468","text":"1397"},{"range":"1469","text":"1397"},{"range":"1470","text":"1397"},{"range":"1471","text":"1397"},{"range":"1472","text":"1397"},{"range":"1473","text":"1397"},{"range":"1474","text":"1397"},{"range":"1475","text":"1397"},{"range":"1476","text":"1397"},{"range":"1477","text":"1397"},{"range":"1478","text":"1397"},{"range":"1479","text":"1397"},{"range":"1480","text":"1397"},{"range":"1481","text":"1397"},{"range":"1482","text":"1397"},{"range":"1483","text":"1397"},{"range":"1484","text":"1397"},{"range":"1485","text":"1397"},{"range":"1486","text":"1397"},{"range":"1487","text":"1397"},{"range":"1488","text":"1397"},{"range":"1489","text":"1397"},{"range":"1490","text":"1397"},{"range":"1491","text":"1397"},{"range":"1492","text":"1397"},{"range":"1493","text":"1397"},{"range":"1494","text":"1397"},{"range":"1495","text":"1397"},{"range":"1496","text":"1397"},{"range":"1497","text":"1397"},{"range":"1498","text":"1397"},{"range":"1499","text":"1397"},{"range":"1500","text":"1397"},{"range":"1501","text":"1397"},{"range":"1502","text":"1397"},{"range":"1503","text":"1397"},{"range":"1504","text":"1397"},{"range":"1505","text":"1397"},{"range":"1506","text":"1397"},{"range":"1507","text":"1397"},{"range":"1508","text":"1397"},{"range":"1509","text":"1397"},{"range":"1510","text":"1397"},{"range":"1511","text":"1397"},{"range":"1512","text":"1397"},{"range":"1513","text":"1397"},{"range":"1514","text":"1397"},{"range":"1515","text":"1397"},{"range":"1516","text":"1397"},"'Marker' is defined but never used.",{"range":"1517","text":"1397"},{"range":"1518","text":"1397"},{"range":"1519","text":"1397"},{"range":"1520","text":"1397"},{"range":"1521","text":"1397"},{"range":"1522","text":"1397"},{"range":"1523","text":"1397"},{"range":"1524","text":"1397"},{"range":"1525","text":"1397"},{"range":"1526","text":"1397"},{"range":"1527","text":"1397"},{"range":"1528","text":"1397"},{"range":"1529","text":"1397"},{"range":"1530","text":"1397"},{"range":"1531","text":"1397"},{"range":"1532","text":"1397"},{"range":"1533","text":"1397"},{"range":"1534","text":"1397"},{"range":"1535","text":"1397"},{"range":"1536","text":"1397"},{"range":"1537","text":"1397"},{"range":"1538","text":"1397"},{"range":"1539","text":"1397"},{"range":"1540","text":"1397"},{"range":"1541","text":"1397"},{"range":"1542","text":"1397"},{"range":"1543","text":"1397"},{"range":"1544","text":"1397"},{"range":"1545","text":"1397"},{"range":"1546","text":"1397"},{"range":"1547","text":"1397"},{"range":"1548","text":"1397"},{"range":"1549","text":"1397"},{"range":"1550","text":"1397"},{"range":"1551","text":"1397"},{"range":"1552","text":"1397"},{"range":"1553","text":"1397"},{"range":"1554","text":"1397"},{"range":"1555","text":"1397"},{"range":"1556","text":"1397"},{"range":"1557","text":"1397"},{"range":"1558","text":"1397"},{"range":"1559","text":"1397"},{"range":"1560","text":"1397"},{"range":"1561","text":"1397"},{"range":"1562","text":"1397"},{"range":"1563","text":"1397"},{"range":"1564","text":"1397"},{"range":"1565","text":"1397"},{"range":"1566","text":"1397"},{"range":"1567","text":"1397"},{"range":"1568","text":"1397"},{"range":"1569","text":"1397"},{"range":"1570","text":"1397"},{"range":"1571","text":"1397"},{"range":"1572","text":"1397"},{"range":"1573","text":"1397"},{"range":"1574","text":"1397"},{"range":"1575","text":"1397"},{"range":"1576","text":"1397"},[6030,6030]," rel=\"noreferrer\"",[6323,6323],[6632,6632],[6047,6047],[6365,6365],[6585,6585],[5955,5955],[6269,6269],[6572,6572],[5946,5946],[6176,6176],[6493,6493],[6062,6062],[6380,6380],[6600,6600],[5960,5960],[6203,6203],[6493,6493],[6028,6028],[6253,6253],[6549,6549],[5956,5956],[6168,6168],[6391,6391],[5951,5951],[6194,6194],[6484,6484],[5935,5935],[6234,6234],[6550,6550],[5968,5968],[6180,6180],[6476,6476],[5961,5961],[6216,6216],[6433,6433],[5931,5931],[6178,6178],[6397,6397],[5951,5951],[6172,6172],[6389,6389],[5972,5972],[6214,6214],[6439,6439],[5932,5932],[6143,6143],[6430,6430],[5945,5945],[6150,6150],[6373,6373],[5961,5961],[6238,6238],[6487,6487],[5956,5956],[6189,6189],[6435,6435],[5933,5933],[6173,6173],[6415,6415],[5948,5948],[6169,6169],[6391,6391],[5956,5956],[6159,6159],[6371,6371],[5962,5962],[6256,6256],[6480,6480],[5939,5939],[6156,6156],[6442,6442],[5969,5969],[6223,6223],[6483,6483],[6032,6032],[6249,6249],[6456,6456],[5961,5961],[6188,6188],[6405,6405],[5961,5961],[6173,6173],[6396,6396],[5941,5941],[6199,6199],[6407,6407],[5939,5939],[6156,6156],[6379,6379],[5950,5950],[6163,6163],[6469,6469],[5953,5953],[6183,6183],[6429,6429],[6023,6023],[6240,6240],[6476,6476],[5951,5951],[6175,6175],[6420,6420],[5931,5931],[6212,6212],[6431,6431],[5955,5955],[6176,6176],[6394,6394],[5937,5937],[6193,6193],[6437,6437],[5957,5957],[6205,6205],[6438,6438],[5930,5930],[6146,6146],[6379,6379],[5936,5936],[6160,6160],[6387,6387],[6015,6015],[6231,6231],[6500,6500],[5947,5947],[6159,6159],[6438,6438],[5938,5938],[6157,6157],[6400,6400],[5962,5962],[6206,6206],[6432,6432],[6047,6047],[6258,6258],[6483,6483],[6070,6070],[6301,6301],[6531,6531],[6039,6039],[6264,6264],[6489,6489],[6060,6060],[6282,6282],[6516,6516],[6048,6048],[6274,6274],[6498,6498],[6033,6033],[6291,6291],[6521,6521],[5940,5940],[6168,6168],[6406,6406],[5963,5963],[6272,6272],[6563,6563],[5940,5940],[6246,6246],[6558,6558],[5967,5967],[6325,6325],[6671,6671],[5978,5978],[6270,6270],[6518,6518],[5926,5926],[6209,6209],[6432,6432],[5951,5951],[6263,6263],[6512,6512],[5973,5973],[6305,6305],[6556,6556],[6040,6040],[6347,6347],[6656,6656],[6043,6043],[6350,6350],[6659,6659]]